[1mdiff --git a/.vscode/launch.json b/.vscode/launch.json[m
[1mnew file mode 100644[m
[1mindex 0000000..5c7247b[m
[1m--- /dev/null[m
[1m+++ b/.vscode/launch.json[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m{[m
[32m+[m[32m    // Use IntelliSense to learn about possible attributes.[m
[32m+[m[32m    // Hover to view descriptions of existing attributes.[m
[32m+[m[32m    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387[m
[32m+[m[32m    "version": "0.2.0",[m
[32m+[m[32m    "configurations": [][m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Untitled-1.c b/Untitled-1.c[m
[1mnew file mode 100644[m
[1mindex 0000000..ffd6c3d[m
[1m--- /dev/null[m
[1m+++ b/Untitled-1.c[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m#include <stdio.h>[m
[32m+[m
[32m+[m[32m// Function to find the majority element in the array[m
[32m+[m[32mint findMajorityElement(int nums[], int n) {[m
[32m+[m[32m    // Outer loop to pick each element one by one[m
[32m+[m[32m    for (int i = 0; i < n; i++) {[m
[32m+[m[32m        int count = 0;[m
[32m+[m
[32m+[m[32m        // Inner loop to count occurrences of the current element[m
[32m+[m[32m        for (int j = 0; j < n; j++) {[m
[32m+[m[32m            if (nums[i] == nums[j]) {[m
[32m+[m[32m                count++;[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // Check if the current element is the majority element[m
[32m+[m[32m        if (count > n / 2) {[m
[32m+[m[32m            return nums[i];[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Return -1 if no majority element is found[m
[32m+[m[32m    return -1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mint main() {[m
[32m+[m[32m    int nums[] = {3, 3, 4, 2, 4, 4, 2, 4, 4};[m
[32m+[m[32m    int n = sizeof(nums) / sizeof(nums[0]); // Calculate the size of the array[m
[32m+[m
[32m+[m[32m    int result = findMajorityElement(nums, n);[m
[32m+[m
[32m+[m[32m    if (result != -1) {[m
[32m+[m[32m        printf("The majority element is: %d\n", result);[m
[32m+[m[32m    } else {[m
[32m+[m[32m        printf("No majority element found.\n");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
[1mdiff --git a/index.html b/index.html[m
[1mindex 26e21cc..8f505c3 100644[m
[1m--- a/index.html[m
[1m+++ b/index.html[m
[36m@@ -1,2 +1,2 @@[m
 <p>I am Sameer Shaik</p>[m
[31m-<p>This is a new feature (dropdown)</p>[m
\ No newline at end of file[m
[32m+[m[32m<p>This is a new feature</p>[m
\ No newline at end of file[m
